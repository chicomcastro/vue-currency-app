{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/services/api.ts","webpack:///./src/components/ListQuotes.vue","webpack:///./src/components/ListQuotes.vue?df27","webpack:///./src/components/ListQuotes.vue?a53a","webpack:///./src/components/WatchListQuotes.vue","webpack:///./src/components/WatchListQuotes.vue?55e8","webpack:///./src/components/WatchListQuotes.vue?a029","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/store/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","listenQuotes","listen-quotes","removeListenedQuote","quotes","addQuoteToListen","api","a","baseURL","all","listen","codes","join","quote","high","low","pctChange","includes","data-tooltip","$emit","props","type","required","Array","emits","render","onUnlisten","nextUpdateTime","CURRENT_UPDATE_TIME","components","ListQuotes","interval","undefined","methods","code","this","refresh","restartInterval","clearInterval","setInterval","mounted","unmounted","watch","deep","handler","WatchListQuotes","computed","setup","response","state","vuexLocal","storage","localStorage","store","mutations","payload","filter","actions","context","commit","plugins","plugin","App","use","mount"],"mappings":"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","file":"js/app.7fdc5755.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-currency-app/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\r\n    <div class=\"container grid-lg my-2 py-2\">\r\n        <div class=\"card mb-2\" v-if=\"listenQuotes.length > 0\">\r\n            <div class=\"card-header\">\r\n                <div class=\"h4\">Acompanhando</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <WatchListQuotes\r\n                    :listen-quotes=\"listenQuotes\"\r\n                    @unlisten=\"removeListenedQuote\"\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"h4\">Todas as moedas</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <ListQuotes\r\n                    :quotes=\"quotes\"\r\n                    :listen-quotes=\"listenQuotes\"\r\n                    @listen=\"addQuoteToListen\"\r\n                    @unlisten=\"removeListenedQuote\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n// import { Options, Vue, setup } from 'vue-class-component';\r\nimport { defineComponent, onMounted, reactive, toRefs } from 'vue';\r\nimport api from '@/services/api';\r\nimport ListQuotes from './components/ListQuotes.vue';\r\nimport WatchListQuotes from './components/WatchListQuotes.vue';\r\nimport { Quotes } from './types/quotes';\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\n// \"Classical\" components\r\nexport default defineComponent({\r\n    name: 'App',\r\n    components: { ListQuotes, WatchListQuotes },\r\n    computed: {\r\n        ...mapState(['listenQuotes']),\r\n    },\r\n    methods: {\r\n        ...mapActions(['addQuoteToListen', 'removeListenedQuote']),\r\n    },\r\n    setup() {\r\n        const data: { quotes: Quotes } = reactive({\r\n            quotes: {},\r\n        });\r\n        onMounted(async () => {\r\n            const response = await api.all();\r\n            data.quotes = response.data;\r\n        });\r\n        return {\r\n            ...toRefs(data),\r\n        };\r\n    },\r\n});\r\n\r\n// Class components\r\n// @Options({\r\n//     name: 'App',\r\n//     components: { ListQuotes, WatchListQuotes },\r\n// })\r\n// export default class App extends Vue {\r\n//     myContext = setup(() => {\r\n//         const data: { quotes: Quotes; listenQuotes: string[] } = {\r\n//             quotes: {},\r\n//             listenQuotes: [],\r\n//         };\r\n//         onMounted(async () => {\r\n//             const response = await api.all();\r\n//             data.quotes = response.data;\r\n//         });\r\n//         function onListen(code: string) {\r\n//             data.listenQuotes.push(code);\r\n//         }\r\n//         function onUnlisten(code: string) {\r\n//             data.listenQuotes = data.listenQuotes.filter((key) => key !== code);\r\n//         }\r\n//         return {\r\n//             ...toRefs(data),\r\n//             onListen,\r\n//             onUnlisten,\r\n//         };\r\n//     });\r\n// }\r\n</script>\r\n","import { Quotes } from '@/types/quotes';\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://economia.awesomeapi.com.br/json',\r\n});\r\n\r\nexport default {\r\n    all(): Promise<AxiosResponse<Quotes>> {\r\n        return api.get('/all');\r\n    },\r\n\r\n    listen(codes: string[] = []): Promise<AxiosResponse<Quotes>> {\r\n        return api.get(`/all/${codes.join()}`);\r\n    },\r\n};\r\n","<template>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>Código</th>\r\n                <th>Nome</th>\r\n                <th>Máximo</th>\r\n                <th>Mínimo</th>\r\n                <th>Variação</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(quote, key) in quotes\" :key=\"key\">\r\n                <td>{{ key }}</td>\r\n                <td>{{ quote.name }}</td>\r\n                <td>{{ quote.high }}</td>\r\n                <td>{{ quote.low }}</td>\r\n                <td>\r\n                    <span\r\n                        class=\"label label-rounded text-small\"\r\n                        :class=\"{\r\n                            'label-error': quote.pctChange < 0,\r\n                            'label-success': quote.pctChange > 0,\r\n                        }\"\r\n                    >\r\n                        {{ quote.pctChange }} %\r\n                    </span>\r\n                </td>\r\n                <td>\r\n                    <a\r\n                        v-if=\"!listenQuotes.includes(key)\"\r\n                        class=\"btn btn-primary btn-sm tooltip tooltip-left\"\r\n                        data-tooltip=\"Seguir\"\r\n                        @click=\"$emit('listen', key)\"\r\n                    >\r\n                        <i class=\"icon icon-plus\"></i>\r\n                    </a>\r\n                    <a\r\n                        v-else\r\n                        class=\"btn btn-error btn-sm tooltip tooltip-left\"\r\n                        data-tooltip=\"Remover\"\r\n                        @click=\"$emit('unlisten', key)\"\r\n                    >\r\n                        <i class=\"icon icon-minus\"></i>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\n\r\n@Options({\r\n    props: {\r\n        quotes: { type: Object, required: true },\r\n        listenQuotes: { type: Array, required: true },\r\n    },\r\n    emits: ['listen', 'unlisten'],\r\n})\r\nexport default class ListQuotes extends Vue {}\r\n</script>\r\n","\r\nimport { Options, Vue } from 'vue-class-component';\r\n\r\n@Options({\r\n    props: {\r\n        quotes: { type: Object, required: true },\r\n        listenQuotes: { type: Array, required: true },\r\n    },\r\n    emits: ['listen', 'unlisten'],\r\n})\r\nexport default class ListQuotes extends Vue {}\r\n","import { render } from \"./ListQuotes.vue?vue&type=template&id=301b58b6\"\nimport script from \"./ListQuotes.vue?vue&type=script&lang=ts\"\nexport * from \"./ListQuotes.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <ListQuotes\r\n        :quotes=\"quotes\"\r\n        :listen-quotes=\"listenQuotes\"\r\n        @unlisten=\"onUnlisten\"\r\n    />\r\n    <div class=\"mt-2 text-right\">\r\n        <cite class=\"text-small\">\r\n            Atualizará novamente em <b>{{ nextUpdateTime }} segundos</b>\r\n        </cite>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n// import {\r\n//     defineComponent,\r\n//     onMounted,\r\n//     onUnmounted,\r\n//     reactive,\r\n//     Ref,\r\n//     ref,\r\n//     toRefs,\r\n//     watch,\r\n// } from 'vue';\r\n// import { Quotes } from '@/types/quotes';\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport ListQuotes from './ListQuotes.vue';\r\nimport api from '@/services/api';\r\n\r\nconst CURRENT_UPDATE_TIME = 10;\r\n\r\n// export default defineComponent({\r\n//     components: { ListQuotes },\r\n//     props: {\r\n//         listenQuotes: { type: Array, required: true },\r\n//     },\r\n//     emits: ['unlisten'],\r\n//     setup(props, { emit }) {\r\n//         const interval: Ref<number | undefined> = ref(undefined);\r\n//         const quotes: Ref<Quotes> = ref({});\r\n//         const nextUpdateTime = ref(CURRENT_UPDATE_TIME);\r\n//         const methods = reactive({\r\n//             onUnlisten(code: string) {\r\n//                 emit('unlisten', code);\r\n//             },\r\n//             restartInterval() {\r\n//                 clearInterval(interval.value);\r\n//                 nextUpdateTime.value = CURRENT_UPDATE_TIME;\r\n//                 interval.value = setInterval(() => {\r\n//                     nextUpdateTime.value -= 1;\r\n//                     if (nextUpdateTime.value === 0) {\r\n//                         nextUpdateTime.value = CURRENT_UPDATE_TIME;\r\n//                         this.refresh();\r\n//                     }\r\n//                 }, 1000);\r\n//             },\r\n//             async refresh() {\r\n//                 const { data } = await api.listen(\r\n//                     props.listenQuotes as string[]\r\n//                 );\r\n//                 quotes.value = data;\r\n//             },\r\n//         });\r\n//         onMounted(() => {\r\n//             methods.refresh();\r\n//             methods.restartInterval();\r\n//         });\r\n//         onUnmounted(() => {\r\n//             clearInterval(interval.value);\r\n//         });\r\n//         watch(props, () => {\r\n//             methods.refresh();\r\n//             methods.restartInterval();\r\n//         });\r\n//         return {\r\n//             ...toRefs(methods),\r\n//             quotes,\r\n//             nextUpdateTime,\r\n//         };\r\n//     },\r\n// });\r\n@Options({\r\n    components: { ListQuotes },\r\n    props: {\r\n        listenQuotes: { type: Array, required: true },\r\n    },\r\n    emits: ['unlisten'],\r\n    data() {\r\n        return {\r\n            interval: undefined,\r\n            quotes: {},\r\n            nextUpdateTime: CURRENT_UPDATE_TIME,\r\n        };\r\n    },\r\n    methods: {\r\n        onUnlisten(code: string) {\r\n            this.refresh();\r\n            this.$emit('unlisten', code);\r\n        },\r\n        restartInterval() {\r\n            clearInterval(this.interval);\r\n            this.nextUpdateTime = CURRENT_UPDATE_TIME;\r\n            this.interval = setInterval(() => {\r\n                this.nextUpdateTime -= 1;\r\n                if (this.nextUpdateTime === 0) {\r\n                    this.nextUpdateTime = CURRENT_UPDATE_TIME;\r\n                    this.refresh();\r\n                }\r\n            }, 1000);\r\n        },\r\n        async refresh() {\r\n            const { data } = await api.listen(this.listenQuotes as string[]);\r\n            this.quotes = data;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.refresh();\r\n        this.restartInterval();\r\n    },\r\n    unmounted() {\r\n        clearInterval(this.interval.value);\r\n    },\r\n    watch: {\r\n        listenQuotes: {\r\n            deep: true,\r\n            handler() {\r\n                this.refresh();\r\n                this.restartInterval();\r\n            },\r\n        },\r\n    },\r\n})\r\nexport default class WatchListQuotes extends Vue {}\r\n</script>\r\n","\r\n// import {\r\n//     defineComponent,\r\n//     onMounted,\r\n//     onUnmounted,\r\n//     reactive,\r\n//     Ref,\r\n//     ref,\r\n//     toRefs,\r\n//     watch,\r\n// } from 'vue';\r\n// import { Quotes } from '@/types/quotes';\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport ListQuotes from './ListQuotes.vue';\r\nimport api from '@/services/api';\r\n\r\nconst CURRENT_UPDATE_TIME = 10;\r\n\r\n// export default defineComponent({\r\n//     components: { ListQuotes },\r\n//     props: {\r\n//         listenQuotes: { type: Array, required: true },\r\n//     },\r\n//     emits: ['unlisten'],\r\n//     setup(props, { emit }) {\r\n//         const interval: Ref<number | undefined> = ref(undefined);\r\n//         const quotes: Ref<Quotes> = ref({});\r\n//         const nextUpdateTime = ref(CURRENT_UPDATE_TIME);\r\n//         const methods = reactive({\r\n//             onUnlisten(code: string) {\r\n//                 emit('unlisten', code);\r\n//             },\r\n//             restartInterval() {\r\n//                 clearInterval(interval.value);\r\n//                 nextUpdateTime.value = CURRENT_UPDATE_TIME;\r\n//                 interval.value = setInterval(() => {\r\n//                     nextUpdateTime.value -= 1;\r\n//                     if (nextUpdateTime.value === 0) {\r\n//                         nextUpdateTime.value = CURRENT_UPDATE_TIME;\r\n//                         this.refresh();\r\n//                     }\r\n//                 }, 1000);\r\n//             },\r\n//             async refresh() {\r\n//                 const { data } = await api.listen(\r\n//                     props.listenQuotes as string[]\r\n//                 );\r\n//                 quotes.value = data;\r\n//             },\r\n//         });\r\n//         onMounted(() => {\r\n//             methods.refresh();\r\n//             methods.restartInterval();\r\n//         });\r\n//         onUnmounted(() => {\r\n//             clearInterval(interval.value);\r\n//         });\r\n//         watch(props, () => {\r\n//             methods.refresh();\r\n//             methods.restartInterval();\r\n//         });\r\n//         return {\r\n//             ...toRefs(methods),\r\n//             quotes,\r\n//             nextUpdateTime,\r\n//         };\r\n//     },\r\n// });\r\n@Options({\r\n    components: { ListQuotes },\r\n    props: {\r\n        listenQuotes: { type: Array, required: true },\r\n    },\r\n    emits: ['unlisten'],\r\n    data() {\r\n        return {\r\n            interval: undefined,\r\n            quotes: {},\r\n            nextUpdateTime: CURRENT_UPDATE_TIME,\r\n        };\r\n    },\r\n    methods: {\r\n        onUnlisten(code: string) {\r\n            this.refresh();\r\n            this.$emit('unlisten', code);\r\n        },\r\n        restartInterval() {\r\n            clearInterval(this.interval);\r\n            this.nextUpdateTime = CURRENT_UPDATE_TIME;\r\n            this.interval = setInterval(() => {\r\n                this.nextUpdateTime -= 1;\r\n                if (this.nextUpdateTime === 0) {\r\n                    this.nextUpdateTime = CURRENT_UPDATE_TIME;\r\n                    this.refresh();\r\n                }\r\n            }, 1000);\r\n        },\r\n        async refresh() {\r\n            const { data } = await api.listen(this.listenQuotes as string[]);\r\n            this.quotes = data;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.refresh();\r\n        this.restartInterval();\r\n    },\r\n    unmounted() {\r\n        clearInterval(this.interval.value);\r\n    },\r\n    watch: {\r\n        listenQuotes: {\r\n            deep: true,\r\n            handler() {\r\n                this.refresh();\r\n                this.restartInterval();\r\n            },\r\n        },\r\n    },\r\n})\r\nexport default class WatchListQuotes extends Vue {}\r\n","import { render } from \"./WatchListQuotes.vue?vue&type=template&id=ba42a5c4\"\nimport script from \"./WatchListQuotes.vue?vue&type=script&lang=ts\"\nexport * from \"./WatchListQuotes.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\n// import { Options, Vue, setup } from 'vue-class-component';\r\nimport { defineComponent, onMounted, reactive, toRefs } from 'vue';\r\nimport api from '@/services/api';\r\nimport ListQuotes from './components/ListQuotes.vue';\r\nimport WatchListQuotes from './components/WatchListQuotes.vue';\r\nimport { Quotes } from './types/quotes';\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\n// \"Classical\" components\r\nexport default defineComponent({\r\n    name: 'App',\r\n    components: { ListQuotes, WatchListQuotes },\r\n    computed: {\r\n        ...mapState(['listenQuotes']),\r\n    },\r\n    methods: {\r\n        ...mapActions(['addQuoteToListen', 'removeListenedQuote']),\r\n    },\r\n    setup() {\r\n        const data: { quotes: Quotes } = reactive({\r\n            quotes: {},\r\n        });\r\n        onMounted(async () => {\r\n            const response = await api.all();\r\n            data.quotes = response.data;\r\n        });\r\n        return {\r\n            ...toRefs(data),\r\n        };\r\n    },\r\n});\r\n\r\n// Class components\r\n// @Options({\r\n//     name: 'App',\r\n//     components: { ListQuotes, WatchListQuotes },\r\n// })\r\n// export default class App extends Vue {\r\n//     myContext = setup(() => {\r\n//         const data: { quotes: Quotes; listenQuotes: string[] } = {\r\n//             quotes: {},\r\n//             listenQuotes: [],\r\n//         };\r\n//         onMounted(async () => {\r\n//             const response = await api.all();\r\n//             data.quotes = response.data;\r\n//         });\r\n//         function onListen(code: string) {\r\n//             data.listenQuotes.push(code);\r\n//         }\r\n//         function onUnlisten(code: string) {\r\n//             data.listenQuotes = data.listenQuotes.filter((key) => key !== code);\r\n//         }\r\n//         return {\r\n//             ...toRefs(data),\r\n//             onListen,\r\n//             onUnlisten,\r\n//         };\r\n//     });\r\n// }\r\n","import { render } from \"./App.vue?vue&type=template&id=7f43ff0a\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { ActionContext, createStore } from 'vuex';\r\nimport VuexPersistence from 'vuex-persist';\r\n\r\ntype State = {\r\n    listenQuotes: string[];\r\n};\r\n\r\nconst state: State = {\r\n    listenQuotes: [],\r\n};\r\n\r\nconst vuexLocal = new VuexPersistence<State>({\r\n    key: '#currency-app',\r\n    storage: window.localStorage,\r\n});\r\n\r\nconst store = createStore({\r\n    state,\r\n    mutations: {\r\n        addQuoteToListen(state, payload: string) {\r\n            if (!state.listenQuotes.includes(payload)) {\r\n                state.listenQuotes.push(payload);\r\n            }\r\n        },\r\n        removeListenedQuote(state, payload: string) {\r\n            if (state.listenQuotes.includes(payload)) {\r\n                state.listenQuotes = state.listenQuotes.filter(\r\n                    (quote) => quote !== payload\r\n                );\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        addQuoteToListen(\r\n            context: ActionContext<State, State>,\r\n            quote: string\r\n        ): void {\r\n            const { commit } = context;\r\n            commit('addQuoteToListen', quote);\r\n        },\r\n        removeListenedQuote(\r\n            context: ActionContext<State, State>,\r\n            quote: string\r\n        ): void {\r\n            const { commit } = context;\r\n            commit('removeListenedQuote', quote);\r\n        },\r\n    },\r\n    plugins: [vuexLocal.plugin],\r\n});\r\n\r\nexport default store;\r\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport store from './store';\n\nimport 'spectre.css/dist/spectre.min.css';\nimport 'spectre.css/dist/spectre-icons.min.css';\n\ncreateApp(App).use(store).mount('#app');\n"],"sourceRoot":""}